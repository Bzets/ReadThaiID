import tkinter as tk
from tkinter import messagebox
from tkinter import filedialog
import json
import os
from datetime import datetime

# ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
USER_FILE = "users.json"

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
PRODUCTS_BY_CATEGORY = {
    "‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á": [
        ("‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏™‡∏¥‡∏á‡∏´‡πå", 35), ("‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πâ‡∏≤‡∏á", 30), ("‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏•‡∏µ‡πÇ‡∏≠", 28),
        ("‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡πÑ‡∏Æ‡πÄ‡∏ô‡πÄ‡∏Å‡πâ‡∏ô", 45), ("‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡∏≤‡∏£‡πå‡∏•‡∏™‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏Å", 40)
    ],
    "‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå‡∏Ç‡∏ß‡∏î": [
        ("‡∏™‡∏¥‡∏á‡∏´‡πå‡∏Ç‡∏ß‡∏î", 60), ("‡∏ä‡πâ‡∏≤‡∏á‡∏Ç‡∏ß‡∏î", 60), ("‡∏•‡∏µ‡πÇ‡∏≠‡∏Ç‡∏ß‡∏î", 60),
        ("‡πÑ‡∏Æ‡πÄ‡∏ô‡πÄ‡∏Å‡πâ‡∏ô‡∏Ç‡∏ß‡∏î", 55), ("‡∏Ñ‡∏≤‡∏£‡πå‡∏•‡∏™‡πÄ‡∏ö‡∏¥‡∏£‡πå‡∏Å‡∏Ç‡∏ß‡∏î", 50)
    ],
    "‡πÄ‡∏´‡∏•‡πâ‡∏≤": [
        ("‡πÅ‡∏™‡∏á‡πÇ‡∏™‡∏°", 250), ("‡πÅ‡∏°‡πà‡πÇ‡∏Ç‡∏á", 220), ("‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏™‡∏á", 200), ("‡∏°‡∏±‡∏á‡∏Å‡∏£‡∏ó‡∏≠‡∏á", 180)
    ],
    "‡∏°‡∏¥‡∏Å‡πÄ‡∏ã‡∏≠‡∏£‡πå": [
        ("‡πÇ‡∏ã‡∏î‡∏≤", 15), ("‡πÇ‡∏ó‡∏ô‡∏¥‡∏Ñ", 20), ("‡∏ô‡πâ‡∏≥‡∏ú‡∏•‡πÑ‡∏°‡πâ", 25)
    ]
}

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏•‡∏≤‡∏á ---
def center_window(window, width, height):
    screen_width = window.winfo_screenwidth()
    screen_height = window.winfo_screenheight()
    x = (screen_width // 2) - (width // 2)
    y = (screen_height // 2) - (height // 2)
    window.geometry(f"{width}x{height}+{x}+{y}")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å user ‡∏°‡∏µ order_history ‡πÄ‡∏™‡∏°‡∏≠)
def load_users():
    if os.path.exists(USER_FILE):
        with open(USER_FILE, "r", encoding="utf-8") as f:
            users = json.load(f)
            # üîπ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å user ‡∏°‡∏µ order_history
            for username, data in users.items():
                if "order_history" not in data:
                    users[username]["order_history"] = []
            return users
    return {}

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
def save_users(users):
    with open(USER_FILE, "w", encoding="utf-8") as f:
        json.dump(users, f, ensure_ascii=False, indent=4)

# --- ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ---
def register_user():
    username = reg_username.get().strip()
    password = reg_password.get().strip()
    age = reg_age.get().strip()
    phone = reg_phone.get().strip()
    bank_number = reg_bank_number.get().strip()
    bank_name = reg_bank_name.get().strip()

    if not (username and password and age and phone and bank_number and bank_name):
        reg_status_var.set("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö")
        return

    if len(password) != 4:
        reg_status_var.set("‚ö†Ô∏è ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 4 ‡∏ï‡∏±‡∏ß")
        return

    if not age.isdigit():
        reg_status_var.set("‚ö†Ô∏è ‡∏≠‡∏≤‡∏¢‡∏∏‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç")
        return
    age = int(age)
    if age < 20:
        reg_status_var.set("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏ 20 ‡∏õ‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏î‡πâ")
        return

    if not (phone.isdigit() and len(phone) == 10):
        reg_status_var.set("‚ö†Ô∏è ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 10 ‡∏ï‡∏±‡∏ß")
        return

    if not (bank_number.isdigit() and len(bank_number) == 10):
        reg_status_var.set("‚ö†Ô∏è ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ 10 ‡∏´‡∏•‡∏±‡∏Å)")
        return

    users = load_users()
    if username in users:
        reg_status_var.set("‚ùå ‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß")
        return
    for user, data in users.items():
        if data["bank_number"] == bank_number:
            reg_status_var.set("‚ùå ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
            return

    users[username] = {
        "password": password,
        "age": age,
        "phone": phone,
        "bank_number": bank_number,
        "bank_name": bank_name,
        "balance": 0,
        "order_history": []  # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå order_history
    }
    save_users(users)
    reg_status_var.set("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    reg_window.after(2000, reg_window.destroy)

# --- ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ---
def login_user():
    username = login_username.get().strip()
    password = login_password.get().strip()
    users = load_users()

    if username not in users:
        login_status_var.set("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å")
        return

    if users[username]["password"] == password:
        if users[username]["age"] < 20:
            login_status_var.set("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏ 20 ‡∏õ‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ")
            return
        login_status_var.set("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        login_window.after(500, lambda: [login_window.withdraw(), open_shop(username)])
    else:
        login_status_var.set("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö GUI ---
def buy_product(name, price, username, balance_var, shop_status_var):
    users = load_users()
    if users[username]["balance"] < price:
        shop_status_var.set("‚ö†Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠")
        return

    confirm_window = tk.Toplevel()
    confirm_window.title("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠")
    confirm_window.config(bg="#FFF5E1")
    center_window(confirm_window, 300, 150)

    tk.Label(confirm_window, text=f"‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠\n{name}\n‡∏£‡∏≤‡∏Ñ‡∏≤ {price} ‡∏ö‡∏≤‡∏ó ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
             bg="#FFF5E1", font=("Arial", 12), justify="center").pack(pady=10)

    def confirm():
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
        purchase_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        order = {"product": name, "price": price, "timestamp": purchase_time}

        # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô KeyError ‡∏≠‡∏µ‡∏Å‡∏ä‡∏±‡πâ‡∏ô
        if "order_history" not in users[username]:
            users[username]["order_history"] = []

        users[username]["order_history"].append(order)
        users[username]["balance"] -= price
        save_users(users)
        balance_var.set(f"‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô: {users[username]['balance']} ‡∏ö‡∏≤‡∏ó")
        shop_status_var.set(f"‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠ {name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
        confirm_window.destroy()

        success_window = tk.Toplevel()
        success_window.title("‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        success_window.config(bg="#D4EFDF")
        center_window(success_window, 250, 100)
        tk.Label(success_window, text=f"‡∏Ñ‡∏∏‡∏ì‡∏ã‡∏∑‡πâ‡∏≠ {name} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!",
                 bg="#D4EFDF", font=("Arial", 12)).pack(pady=10)
        tk.Button(success_window, text="‡∏õ‡∏¥‡∏î", command=success_window.destroy,
                  bg="#58D68D", fg="white", font=("Arial", 10)).pack(pady=5)

    def cancel():
        shop_status_var.set(f"‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠ {name}")
        confirm_window.destroy()

    tk.Button(confirm_window, text="‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", command=confirm,
              bg="#58D68D", fg="white", font=("Arial", 12), width=10).pack(side="left", padx=20, pady=20)
    tk.Button(confirm_window, text="‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", command=cancel,
              bg="#E74C3C", fg="white", font=("Arial", 12), width=10).pack(side="right", padx=20, pady=20)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô ---
# (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ---
# (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)

# --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö ---
# (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)

# --- ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ ---
# (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)

# --- ‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å ---
# (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)

# --- ‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô ---
# (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)
